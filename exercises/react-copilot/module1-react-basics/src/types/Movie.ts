// Generated by Copilot
// TypeScript interface for movie with id, title, director, price, and release date
export interface Movie {
  id: string;
  title: string;
  director: string;
  ticketPrice: number;
  releaseDate: string;
}

// Props interfaces for React components handling movie data
export interface MovieListProps {
  movies: Movie[];
  onMovieClick?: (movie: Movie) => void;
}

export interface MovieDetailProps {
  movie: Movie | null;
}

export interface AddMovieFormProps {
  onSubmit: (movie: Omit<Movie, 'id'>) => void;
  onCancel?: () => void;
}

export interface MovieSearchProps {
  onSearch: (searchTerm: string) => void;
  searchTerm: string;
}

// Utility types for movie operations
export type CreateMovieData = Omit<Movie, 'id'>;
export type UpdateMovieData = Partial<Omit<Movie, 'id'>>;

// Form state interface for controlled components
export interface MovieFormData {
  title: string;
  director: string;
  ticketPrice: string; // String for form input handling
  releaseDate: string;
}

// Form validation errors interface
export interface MovieFormErrors {
  title?: string;
  director?: string;
  ticketPrice?: string;
  releaseDate?: string;
}

// Sort criteria for movie list
export type SortCriteria = 'title' | 'director' | 'ticketPrice' | 'releaseDate';
export type SortOrder = 'asc' | 'desc';

export interface SortOptions {
  criteria: SortCriteria;
  order: SortOrder;
}